<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>

	
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title><%= @requestdef[:title] %></title>

 
 <script type="text/javascript"> 
<!--

function CheckAll()
{
	for (var i=0;i<document.requestform.elements.length;i++)
	{
		var e = document.requestform.elements[i];
		if (e.name != 'allbox')
			e.checked = document.requestform.allbox.checked;
    }
}
function UnCheckAll()
{
        for (var i=0;i<document.requestform.elements.length;i++)
        {
                var e = document.requestform.elements[i];
                if (e.name != 'allbox')
                        e.checked = false;
    }
}
/* Modified from script by: Alan Gruskoff :: http://www.performantsystems.com/
 */
function countChecked(form) {
	var total = 0;
	var max = form.request_items.length;
	for (var idx = 0; idx < max; idx++) {
		if (eval("document.requestform.request_items[" + idx + "].checked") == true) {
    		total += 1;
   		}
	}
	if ( total > 10  ) {
  		alert("You have selected more than 10 items. Your request cannot be processed unless you keep the total to 10 or fewer. " );
	}         
}   
//-->
</script>
   
    <link href="/stylesheets/request-forms.css" rel="stylesheet" type="text/css">
	
	
<!-- Additonal JS and CSS elements for date selector widget -->

	<script type="text/javascript" src="/javascripts/datepicker.packed.js"></script>
	
    <!-- Add the datepicker's stylesheet -->
    <link href="/stylesheets/datepicker.css" rel="stylesheet" type="text/css" />
	
	<script type="text/javascript">
	// Utility function - used in setting date
	function pad(value, length) {
        length = length || 2;
        return "0000".substr(0,length - Math.min(String(value).length, length)) + value;
	};
	</script>
	
</head>
<body>

<div id="header">
<a href="#formstart" class="off_screen">Skip to form</a>

<a id="SULAIR" title="SULAIR Home" href="http://www-sul.stanford.edu/index.html">&nbsp;</a>
<div class="links"><a href="http://library.stanford.edu/socrates">SOCRATES (SU CATALOG)</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="http://library.stanford.edu/images/main_l2/globals_ejournals.gif">E-JOURNALS</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="http://library.stanford.edu/search_form_main">SITE SEARCH</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="http://library.stanford.edu/ask_us/index.html">ASK US</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="http://www-sul.stanford.edu/index.html">SULAIR HOME</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="http://www.stanford.edu/">SU HOME</a></div></div>


<div id="container">

		<!-- Parameter names need to match what's used in destination proc -->
		
		<h1><%= @requestdef[:title] %></h1>
		
		<% if @request.items.size > 0 %>
	
			<div class="opening">
			
			<p><%= @requestdef[:initial_text]%></p>
			
			<p><% if @msg_keys.include?('CHECKEDOUT') %>
		
				<%= @messages['CHECKEDOUT'] %>
			
			<% end %>
			</P>
			
			SUNet ID: <%= request.env['WEBAUTH_USER'] %><br>
			Display Name <%= request.env['WEBAUTH_LDAP_DISPLAYNAME'] %>
			
			</div>
				
			<% unless flash[:invalid_fields].blank?%>
				
					<div id="notification">
					<ul>
					<% msgs = flash[:invalid_fields].split('^') %>
					<% msgs.each do |msg| %>  
					<li><%= msg %></li>
					<% end %>
					</ul>
					</div>
				
			<% end %>
		
		<% end # if items.size > 0 - part 1 %>	
			
		<% form_for(:request, @request, :url => { :action => 'create'}, :html => { :name => 'requestform' }) do |f| %>			
	
		<% if @request.items.size > 0 # part 2 %>
	
			<%= f.hidden_field :req_type %>
			<%= f.hidden_field :home_lib %>	
			<%= f.hidden_field :current_loc %>		
			<%= f.hidden_field :item_id %>
			<%= f.hidden_field :due_date %>
			<%= f.hidden_field :bib_info %>
			<%= f.hidden_field :call_num %>
			<%= f.hidden_field :ckey %>
			<%= f.hidden_field :request_def %>
			<%= f.hidden_field :pickupkey %>

			<!-- Visible fields for record; some may be hidden above -->
					
			<!-- User Info -->
			
			<a name="formstart"></a>
			
			<fieldset><legend>Your Information</legend>
			
			<% if ! @is_authenticated %>
			<div id="autofill">If you have a SUNet ID, <a href="<%= link_to_auth_request(@request) %>">login to auto-fill and enable more options.</a></div>
			<% end %>
			
			<% if @fields.has_key?('patron_name') %>
				<dt><label for="request_patron_name"><%= @fields['patron_name'] %></label></dt>
				<dd><%= f.text_field :patron_name, :value => @request.patron_name %></dd>
			<% end %>
			
			<% if @fields.has_key?('patron_email') %>
				<dt><label for="request_patron_email"><%= @fields['patron_email'] %></label></dt>
				<dd><%= f.text_field :patron_email, :value => @request.patron_email %></dd>
			<% end %>		
			
			<!-- univ ID or library ID depending on authentication; no need to check fields array -->
			
			<% if @is_authenticated %>
	  				<dt><label for="request_univ_id"></label><%= @fields['univ_id'] %></label></dd>
					<dd><%= f.text_field :univ_id %></dd>
			<% else %>
	  				<dt><label for="request_library_id"><%= @fields['library_id'] %></label></dt>
					<dd><%= f.text_field :library_id %></dd>
			<% end %>
			
			<!-- Always have pickup lib field -->
			
			<dt><label for="request_pickup_lib">Will pick up at</label></dt>
				<dd><%= select_tag 'request[pickup_lib]', options_for_select( @pickup_libs_hash, :selected => @request.pickup_lib ) %></dd>
		
			<!-- Hold/Recall - this will be done somewhat differently -->	
			
			<% if @fields.has_key?('hold_recall') %>
				<dt><label for="request_hold_recall">Unavailable items</label></dt>
				
				<dd class="unavail_items">Some items below are currently checked out to other patrons.
				If you select those items, they will be:
				<ul>
					<li>
					<label><input name="request[hold_recall" type="radio" value="HOLD" 
					<% if ! @is_authenticated || ( @is_authenticated && @request.hold_recall.eql?('HOLD') ) %>
					checked="checked"
					<% end %>
					 >held</label>
					</li>
					<li> 
					<label id="recallLabel" 
					<% if ! @is_authenticated %>					
					class="disabled"
					<% end %>
					>						
					<input name="request[hold_recall" id="request_type" type="radio" 
					<% if ! @is_authenticated %>
					disabled="disabled" 
					<% end %>
					<% if @is_authenticated && ! @request.hold_recall.eql?('HOLD') %>
					checked="checked"
					<% end %>
					value="RECALL">
  					recalled
					<% if ! @is_authenticated %>
					<span id="loginInstruction">(login to enable this option)</span>
					<% end %>
					</label></li>
					</ul>
					and delivered when they are returned.
					</dd>

			
			<% end %>
			
			<!-- Have either not_needed or planned_use field but not both -->
			
			<% if @fields.has_key?('not_needed_after') %>
			<dt><label for="request_not_needed_after"><%= @fields['not_needed_after'] %></label></dt>
				<dd><%= f.text_field :not_needed_after, { :class => 'w16em' } %></dd>
				
				<script type="text/javascript">
			
			        var today     = new Date(),
			            // low range, 35 days before today's date
			            rangeLow  = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1),
			            // high range, one year after today's date
			            //rangeHigh = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate() )
			            rangeHigh = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 730 );
			
			        var opts = {
			                formElements:{"request_not_needed_after":"m-sl-d-sl-Y"},
			                // showWeeks:true,
			                // statusFormat:"l-cc-sp-d-sp-F-sp-Y",
			                // Set some dynamically calculated ranges
			                rangeLow:rangeLow.getFullYear() + "" + pad(rangeLow.getMonth()+1) + pad(rangeLow.getDate()),
			                rangeHigh:rangeHigh.getFullYear() + "" + pad(rangeHigh.getMonth()+1) + pad(rangeHigh.getDate()) 
			        	};
			        datePickerController.createDatePicker(opts);

			      </script>				
				
			<% elsif @fields.has_key?('planned_use') %>
			<dt><label for="request_planned_use"><%= @fields['planned_use'] %></label></dt>
				<dd><%= f.text_field :planned_use, { :class => 'w16em' } %></dd>	

				<script type="text/javascript">
					
			        var today     = new Date(),
			            // low range, 35 days before today's date
			            rangeLow  = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1),
			            // high range, one year after today's date
			            //rangeHigh = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate() )
			            rangeHigh = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 30 );
			
			        var opts = {
			                formElements:{"request_planned_use":"m-sl-d-sl-Y"},
			                // showWeeks:true,
			                // statusFormat:"l-cc-sp-d-sp-F-sp-Y",
			                // Set some dynamically calculated ranges
			                rangeLow:rangeLow.getFullYear() + "" + pad(rangeLow.getMonth()+1) + pad(rangeLow.getDate()),
			                rangeHigh:rangeHigh.getFullYear() + "" + pad(rangeHigh.getMonth()+1) + pad(rangeHigh.getDate()) 
			        	};
			        datePickerController.createDatePicker(opts);

			      </script>					

				
						
			<% end %>
			
			<% if @fields.has_key?('vol_num') %>
			<dt><label for="request_vol_num"><%= @fields['vol_num'] %></label></dt>
			<dd><%= f.text_field :vol_num %></dd>
			<% end %>
			
			<% if @fields.has_key?('comments') %>
			<dt><label for="request_comments"><%= @fields['comments'] %></label></dt>
				<dd><%= f.text_area :comments, {:size => "40x10"} %></dd>
			<% end %>			
			
			</fieldset>
		
		<% end # items > 0 - part 2 %>
		
		<% if @request.items.size == 0 # Add extra <p> to make spacing right %>
			<p>&nbsp;</p>
		<% end %>
		
		<fieldset><legend>Volumes/Copies Required</legend>
		

		<% if @fields.has_key?('bib_info') %>

			<span class="title"><%= @request.bib_info %></span>
		<% end %>

		<span class="library"><%= @request.home_lib %>: </span>
		 
		<% if @request.items.size > 1 && @request.items.size <= 10 %>
			<span class="action_varies">
				<input name="allbox" id="allbox" type="checkbox" value="Check All"  onclick="if (this.checked) {CheckAll()} else {UnCheckAll()}" >
    			Select all
			</span>
		<% elsif @request.items.size > 10 %>
			<span class="action_varies">
				Select up to 10 volumes or copies for this request
			</span>	
			<% end %>
		
		 <div class="access_data">
    		<ol class="show_availability item_list">
				
				<% if @request.items.size > 0 %>		
												
					<% @request.items.each do |item| %>
					
						<% values = item.split('^') %>  
					   	
					   	<li><input type="checkbox"
							name="request[items][]" 							
							value="<%= values[1] %>"
							
							<% if @request.items.size > 1 && @request.items.size <= 10 %>
								onclick="if (this.checked == false ) {document.requestform.allbox.checked = false;}" 
							<% else %>
								onclick="countChecked(this.form)" 							
							<% end %>
							<% # following doesn't work for counting checked items: id="check_<%= values[0] %>" %>
							id="request_items"
							<% if ! @request.items_checked.nil? && @request.items_checked.include?( values[1]  ) %>
								checked
							<% elsif @request.items.size == 1 %>
								checked								
							<% end %> >
							
							<label for="check_<%= values[0] %>"> 
							<span id="avail_<%= values[0] %>" 
							class="item_available"><%= values[2]%> 
							<% if ! values[4].nil? && ( values[3] != values[4] ) %>
								- <%= values[4] %> 
							<% end %>
							</span>
							</label>
						</li>

					<% end # items_each %>
				
				<% else %>
					
					All items should be available on the shelf, so they can no longer be requested through this form.
					
				<% end # items > 0 %>

            	</ol>
   		</div>

		
		</fieldset>
		
		<% if @request.items.size > 0 # part 3%>
			<div class="submit">
				<%= submit_tag "Submit Request"  %>
				<a href="javascript:history.go(-1)">Cancel</a>
			</div>
		<% end # items.size > 0 - part 3 %>
		
			
		<% end  # of form_for  %>		
		
		<div class="closing">
		<p><%= @requestdef[:final_text]%></p>
		</div>
		

</div>
		
<div id="footer">

&copy; <a href="http://www.stanford.edu">Stanford University</a>. Stanford, California 94305. (650) 725-1064. <a href="http://library.stanford.edu/about_sulair/termsofuse.html">Terms of Use</a> | <a href="http://stanford.edu/site/copyright.html">Copyright Complaints</a></div>
</body>
</html>		