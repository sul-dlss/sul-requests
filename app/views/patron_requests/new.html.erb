<% if current_user&.patron %>
  <%= render 'user_header' %>
<% end %>

<h1 class="fw-semibold mt-4"><%= current_request.item_title %></h1>
<% if current_request.items_in_location.one? %>
  <% single_item = current_request.items_in_location.first %>
  <div class="lead fw-normal mb-4">Call number: <%= callnumber_label(single_item) %></div>
  <% if single_item.public_note %>
    <span class="text-cardinal d-block ms-4">
      <%= single_item.public_note %>
    </span>
  <% end %>
<% end %>

<%= form_for(@request, data: { controller: 'patronRequest' }, html: { class: 'col-lg-8 accordion' }) do |f| %>
  <% step_enum = Enumerator.new { |y| n = 0; loop { y << (n += 1) } } %>
  <% current_step = nil %>
  <% scan_or_pickup_step = nil %>
  <%= f.hidden_field :instance_hrid %>
  <%= f.hidden_field :origin_location_code %>
  <% if @request.items_in_location.one? || f.object.barcodes&.one? %>
    <%= f.hidden_field :barcode, value: f.object.barcodes&.first || (@request.items_in_location.first&.barcode || @request.items_in_location.first&.id) %>
  <% end %>

  <!-- proxy -->
  <% if current_request.proxy_group_names.present? %>
    <%= render AccordionStepComponent.new(id: 'proxy', step_index: step_enum.next, form_id: f.id) do |c| %>
      <% c.with_title.with_content('Proxy/Sponsor') %>
      <% c.with_body do %>
          <%= render 'proxy', f: %>
      <% end %>
    <% end %>
  <% end %>

  <!-- request type -->
  <% scan_pickup = can?(:request_scan, f.object) && can?(:prepare, f.object) %>
  <% if scan_pickup %>
    <%= render AccordionStepComponent.new(id: 'request-type', step_index: step_enum.next, form_id: f.id) do |c| %>
      <% c.with_title.with_content('Request type') %>
      <% c.with_body do %>
          <%= render 'scan_or_pickup', f: %>
      <% end %>
    <% end %>

    <% if f.object.items_in_location.one? %>
      <%= render AccordionStepComponent.new(id: 'scan-or-pickup-placeholder', form_id: f.id, step_index: (scan_or_pickup_step ||= step_enum.next), data: { 'patronrequest-forRequestType': 'none' }) do |c| %>
        <% c.with_title.with_content('Scan or pickup request') %>
      <% end %>
    <% end %>
  <% end %>

  <!-- item selector -->
  <% if f.object.items_in_location.many? && (can?(:request_scan, f.object) || can?(:prepare, f.object)) %>
    <div data-controller="itemselector" data-action="itemselector:change->patronRequest#showItemSelector">
    <%= render AccordionStepComponent.new(id: 'barcodes', step_index: step_enum.next, form_id: f.id, data: { 'switch-selector': true }) do |c| %>
      <% c.with_title.with_content('Select item(s)') %>
      <% c.with_body do %>
        <div class="item-table my-4">
          <table class="table mb-0 border">
            <thead>
              <tr>
                <th class="text-start">Call number</th>
                <th class="text-end">Status</th>
              </tr>
            </thead>
            <tbody>
              <% sort_holdings(f.object.items_in_location).each do |item| %>
                <% not_requestable = cannot?(:request, item) %>
                <tr>
                  <td class="align-middle">
                    <label>
                      <%= f.check_box 'barcodes', { multiple: true, class: 'form-check-input', disabled: cannot?(:request, item), data: { required: true, 'itemselector-target': 'items', 'itemselector-id-param': item.id, 'itemselector-available-param': item.available?, 'itemselector-duequeueinfo-param': queue_length_display(item),  'itemselector-label-param': item.callnumber, action: 'itemselector#change' } }, item.barcode || item.id, "" %>
                      <span class="form-check-label ms-1"><%= callnumber_label(item) %></span>
                      <% if item.public_note %>
                        <span class="text-cardinal d-block ms-4 mt-1">
                          <%= item.public_note %>
                        </span>
                      <% end %>
                    </label>
                  </td>
                  <td class="align-middle">
                    <%= requests_patron_item_selector_label(item, not_requestable:) %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% end %>
    <% end %>

    <% if scan_pickup %>
      <%= render AccordionStepComponent.new(id: 'scan-or-pickup-placeholder', form_id: f.id, step_index: (scan_or_pickup_step ||= step_enum.next), data: { 'patronrequest-forRequestType': 'none' }) do |c| %>
        <% c.with_title.with_content(scan_pickup ? 'Scan or pickup request' : 'Pickup request') %>
      <% end %>
    <% end %>

    <!-- pickup request (multiple items) -->
    <% if can? :prepare, f.object %>
      <%= render AccordionStepComponent.new(request: @request, id: 'pickup', classes: [('d-none' if scan_pickup)], form_id: f.id, step_index: (scan_or_pickup_step ||= step_enum.next), data: { 'patronrequest-forRequestType': 'pickup' }, submit: true) do |c| %>
        <% c.with_title.with_content('Pickup request') %>
        <% c.with_body do %>
          <div class="selected-items-group">
            <%= render 'pickup_destination', f: %>
            <div class="card">
              <div class="card-body bg-light rounded">
                <div class="d-flex flex-column flex-lg-row align-items-start justify-content-lg-between align-items-lg-center mb-3 gap-2 gap-lg-0">
                    <div class="text-black fw-semibold">Available items</div>
                    <div class="text-cardinal">
                      Pickup:
                      <span class="fw-bold">
                        <% if f.object.pickup_destinations.one? && f.object.earliest_delivery_estimate %>
                          <%= f.object.earliest_delivery_estimate['display_date'] %>
                        <% else %>
                          <%= turbo_frame_tag('earliestAvailable', src: paging_schedule_url(origin: @request.origin_library_code, destination: f.object.service_point_code || f.object.default_service_point_code), data: { 'patronRequest-target' => 'earliestAvailable'}) do %>
                            Loading..
                          <% end %>
                        <% end %>
                      </span>
                      <span> at </span>
                      <span data-patronRequest-target="destination">
                        <%= f.object.destination_location&.name %>
                      </span>
                    </div>
                </div>
                <ul data-itemselector-target="availableItems" class="list-unstyled d-flex flex-wrap gap-2 bg-white p-3 m-0"></ul>
              </div>
            </div>
          </div>
          <div class="card selected-items-group my-3">
            <div class="card-body bg-light rounded">
              <div class="d-flex flex-column flex-lg-row align-items-start justify-content-lg-between align-items-lg-center mb-3 gap-2 gap-lg-0">
                <div class="text-black fw-semibold">Items currently checked out or otherwise unavailable</div>
                <div class="text-cardinal">Pickup: No date/time estimate</div>
              </div>
              <div class="bg-white">
                <ul data-itemselector-target="unavailableItems" class="list-unstyled d-flex flex-wrap gap-2 p-3 m-0"></ul>
                <hr class="styled-hr">
                <%= render 'request_preferences', f: %>
              </div>
            </div>
          </div>
        <% end %>
      <% end %>
    <% end %>

  <div class="toast-container position-fixed bottom-0 end-0 p-3">
    <div class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true" data-itemSelector-target="toast">
      <div class="d-flex">
        <div class="toast-body">You successfully removed an item.</div>
        <button type="button" class="btn btn-text text-uppercase" data-action="itemselector#undo">Undo</button>
        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>
  <% end %>

  <!-- scan request (single or multiitem) -->
  <% if can? :request_scan, f.object %>
    <%= render AccordionStepComponent.new(request: @request, id: 'scan', classes: [('d-none' if scan_pickup)], step_index: (scan_or_pickup_step ||= step_enum.next), form_id: f.id, data: { 'patronrequest-forRequestType': 'scan' }, submit: true) do |c| %>
      <% c.with_title.with_content('Scan request') %>
      <% c.with_body do %>
        <%= render 'scan_options', f: %>
      <% end %>
    <% end %>
  <% end %>
  </div>

  <!-- pickup request (single item )-->
  <% if f.object.items_in_location.one? && can?(:prepare, f.object) %>
    <%= render AccordionStepComponent.new(request: @request, id: 'pickup', classes: [('d-none' if scan_pickup)], step_index: (scan_or_pickup_step ||= step_enum.next), form_id: f.id, data: { 'patronrequest-forRequestType': 'pickup' }, submit: true) do |c| %>
      <% c.with_title.with_content('Pickup request') %>
      <% c.with_body do %>
        <div id="earliestAvailableContainer" class="text-cardinal mt-4" aria-live="polite">
          Earliest available:
          <% if f.object.pickup_destinations.one? && f.object.earliest_delivery_estimate %>
            <%= f.object.earliest_delivery_estimate['display_date'] %>
          <% elsif f.object.any_items_avaliable? %>
            <%= turbo_frame_tag('earliestAvailable', src: paging_schedule_url(origin: @request.origin_library_code, destination: f.object.service_point_code || f.object.default_service_point_code), data: { 'patronRequest-target' => 'earliestAvailable'}) do %>
              Loading..
            <% end %>
          <% else %>
            No date/time estimate
          <% end %> <%= queue_length_display(f.object.items_in_location.first, prefix: ' - ') %>
        </div>
        <%= render 'pickup_destination', f: %>
        <% if f.object.mediateable? %>
            <p>
            After submitting your request, you will receive an email confirmation. Additionally, you will be notified by email once the item is ready for your visit.
            </p>
            <% if f.object.requires_needed_date? %>
                <%= f.label :needed_date, 'I plan to visit on:', :class => 'required-label py-2' %>
                <%= f.date_field :needed_date, :required => true, value:  f.object.earliest_delivery_estimate['date'], min: f.object.earliest_delivery_estimate['date'], class: 'd-block rounded border' %>
            <% end %>
        <% end %>
        <%= render 'request_preferences', f: %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
