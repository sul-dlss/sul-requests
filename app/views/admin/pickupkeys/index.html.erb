<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
		<title>Pickup Keys</title>
	</head>
	<body>
		<%= render :partial => 'header' %> 
		<h1>Pickup Library Keys</h1>
		
		Listed below are "keys" based on data used in Symphony records to identify 
		various classses of request items. The application determines which key applies
		to a record and then uses the corresponding libraries assigned here to create the drop-down
		list of pickup libraries on the request form.
		<p>These keys come from four places:</p>
		
		<ol>
			<li>Library codes for libraries that always allow pickups only at their own location, 
			currently, HOOVER, HV-ARCHIVE, and LAW </li>
			<li>Strings that come at the end of "request types" taking the form "SAL3-TO-XXX", e.g., 
			"BR" from "SAL3-TO-BR"</li>
			<li>Strings that come at the the end of items with "PAGE-XXX" locations for SAL3 items, e.g.,
			"BI" for "PAGE-BI" items.</li>		
			<li>Strings that come at the start of home locations that take the form "XXXXX-30", e.g., "UARCH" from
			"UARCH-30"</li>	
		</ol>
		These keys can be used as to assign one or more pickup libraries to these different classes
		of items. Use the "Edit / Assign Libraries" link to change the key,
		its description, or the libraries assigned to it. Any string that falls into categories 2 through 4
		above can be added as a pickup library key. Additions to the first category, however, will require changes
		to application code.
<p></p>
<table>
  <tr>
    <th>Pickup Key</th>
	<th>Description</th>
	<th>Libraries</th>
  </tr>

<% for pickupkey in @pickupkeys %>
  <tr>
    <td valign="top"><%=h pickupkey.pickup_key %></td>
    <td valign="top"><%=h pickupkey.pickup_descrip %></td>
	
	
	
	<td><%=h get_lib_codes_for_pickupkeys( pickupkey.libraries ) %></td>
	
		

	
    <td nowrap><%= button_to 'Edit / Assign Libraries',{:action => 'edit', :id => pickupkey.id }, :method => :get %></td>
    <td nowrap><%= button_to 'Delete', { :action => 'destroy', :id => pickupkey.id }, :confirm => 'Are you sure you want to delete this item?', 
         :method => :delete %></td>
   </tr>
<% end %>
</table>

    <%= render 'shared/mouseflow' %>
	</body>
</html>
